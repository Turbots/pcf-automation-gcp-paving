---
platform: linux
image_resource:
  type: docker-image
  source:
    repository: google/cloud-sdk
inputs:
  - name: terraform-output
params:
  ENV_NAME:
  GCP_AUTH_JSON:
  PROJECT:
  PARENT_ZONE_NAME:
  ACTION:
  # valid is add and remove
run:
  path: /bin/sh
  args:
    - -c
    - |
      set -eu
      printf '%s\n' "$GCP_AUTH_JSON" > keyfile.json
      gcloud auth activate-service-account --key-file=keyfile.json
      gcloud config set project $PROJECT
      RECORDS=$(gcloud dns record-sets list --zone=$PARENT_ZONE_NAME --name="$ENV_NAME.gcp.cfops.net." --format="value(rrdatas.flatten(separator=' '))")
      gcloud dns record-sets transaction start --zone=$PARENT_ZONE_NAME
      if ([ ! -z "$RECORDS" ]; then
        gcloud dns record-sets transaction remove --zone=$PARENT_ZONE_NAME \
         --name="$ENV_NAME.gcp.cfops.net." \
         --type=NS \
         --ttl=300 $RECORDS
      fi

      if [ $ACTION = "add" ]; then
        gcloud dns record-sets transaction start --zone=$PARENT_ZONE_NAME
        gcloud dns record-sets transaction add --zone=$PARENT_ZONE_NAME \
         --name="$ENV_NAME.gcp.cfops.net." \
         --type=NS \
         --ttl=300 $(python3 -c 'import json;f=json.load(open("terraform-output/metadata")); print("{0} {1}".format(f["env_dns_zone_name_servers"][0],f["env_dns_zone_name_servers"][1]))')
      fi
