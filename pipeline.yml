---
resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: beta-backend

resources:

- name: env-state-gcp
  type: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: ((gcp.project))-((gcp.bucket))
      prefix: ((pas.env_name))
      credentials: ((gcp.gcp_service_account))
    vars:
      project: ((gcp.project))
      region: ((gcp.region))
      zones: ((gcp.zones))
      service_account_key: ((gcp.gcp_service_account))
      buckets_location: ((gcp.buckets_location))
      dns_suffix: ((pas.dns_suffix))
      ssl_cert: ((pas.ssl_cert.certificate))
      ssl_private_key: ((pas.ssl_cert.private_key))
      opsman_vm: false
      opsman_image_url: ""

# configurations
- name: pcf-automation-source
  type: git
  source:
    private_key: ((github.private_key))
    uri: ((github.repos.pcf-automation-source.uri))
    branch: master

- name: configuration
  type: git
  source:
    private_key: ((github.private_key))
    uri: ((github.repos.configuration.uri))
    branch: master

jobs:
- name: terraforming-gcp
  serial: true
  public: false
  plan:
  - get: pcf-automation-source
    trigger: true
  - put: env-state-gcp
    params:
      env_name: ((pas.env_name))
      terraform_source: pcf-automation-source/terraforming-gcp/terraforming-pas
      delete_on_failure: false

- name: template-configuration
  serial: true
  public: false
  plan:
  - aggregate:
    - get: pcf-automation-source
    - get: configuration
    - get: env-state-gcp
      trigger: true
      passed: [terraforming-gcp]
  - task: render-config
    input_mapping:
      config: configuration
      terraform-output: env-state-gcp
      pcf-automation: pcf-automation-source
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: hairyhenderson/gomplate
          tag: alpine
      outputs:
        - name: config_template
      run:
        path: /bin/sh
        args:
          - -c
          - |
              /bin/gomplate -f pcf-automation/templates/director.yml -d data=file://$(pwd)/terraform-output/metadata?type=application/json -o config_template/config/director.yml --verbose
              cat config_template/config/director.yml
    # do:
    # - task: make-commit
    #   image: pcf-automation-image
    #   file: pcf-automation-tasks/tasks/make-git-commit.yml
    #   input_mapping:
    #     repository: configuration
    #     file-source: config_template
    #   output_mapping:
    #     repository-commit: configuration-commit
    #   params:
    #     FILE_SOURCE_PATHS: state.yml
    #     FILE_DESTINATION_DIRECTORY: ((foundation))/config
    #     GIT_AUTHOR_EMAIL: "pcf-pipeline-bot@example.com"
    #     GIT_AUTHOR_NAME: "PCF Automation Bot"
    #     COMMIT_MESSAGE: 'Update state file'
    # - put: configuration
    #   params:
    #     repository: configuration-commit
    #     merge: true
- name: destroy-gcp
  serial: true
  public: false
  plan:
  - aggregate:
    - get: pcf-automation-source
      trigger: false
  - do:
    - put: env-state-gcp
      params:
        terraform_source: pcf-automation-source/terraforming-gcp/terraforming-pas
        delete_on_failure: true
        env_name: ((pas.env_name))
        action: destroy
      get_params:
        action: destroy
